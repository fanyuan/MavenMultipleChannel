apply plugin: 'maven-publish'

publishing {
    def versionString = "${VERSION_NAME}"//"1.6.2-SNAPSHOT"//"1.6.2"//
    publications {
        def projectNm = project.getName()
        println "projectName = $projectNm"
        //重庆测试环境
        cqtest(MavenPublication) {//cqtest即为渠道的名称，可以随意取
            groupId = "$GROUP_ID"//公司域名
            artifactId = "$ARTIFACT_ID-$FLAVORS_CQTEST"//该aar包的名称
            version = "$VERSION_NAME"//版本号
            def projectName = project.getName()

            artifact "$buildDir/outputs/aar/myLibary-cqtest-release.aar"//对应该渠道打包出来的aar所在的目录（如何打包请往下看）
//            pom.withXml{
//                def dependenciesNode = asNode().appendNode("dependencies")
//                configurations.implementation.allDependencies.forEach(){
//                    Dependency dependency ->
//                        if (dependency.version != "unspecified" && dependency.name != "unspecified"){
//                            def dependencyNode = dependenciesNode.appendNode('dependency')
//                            dependencyNode.appendNode('groupId', dependency.group)
//                            dependencyNode.appendNode('artifactId', dependency.name)
//                            dependencyNode.appendNode('version', dependency.version)
//                        }
//                }
//            }
        }

        //开发环境
        dev(MavenPublication) {
            groupId = "$GROUP_ID"//公司域名
            artifactId = "$ARTIFACT_ID-$FLAVORS_DEV"//该aar包的名称
            version = "$VERSION_NAME"//版本号
            def projectName = project.getName()
            artifact "build/outputs/aar/myLibary-dev-release.aar"
//            pom.withXml{
//                def dependenciesNode = asNode().appendNode("dependencies")
//                configurations.implementation.allDependencies.forEach(){
//                    Dependency dependency ->
//                        if (dependency.version != "unspecified" && dependency.name != "unspecified"){
//                            def dependencyNode = dependenciesNode.appendNode('dependency')
//                            dependencyNode.appendNode('groupId', dependency.group)
//                            dependencyNode.appendNode('artifactId', dependency.name)
//                            dependencyNode.appendNode('version', dependency.version)
//                        }
//                }
//            }
        }

        //预发布环境
        pre(MavenPublication) {
            groupId = "$GROUP_ID"//公司域名
            artifactId = "$ARTIFACT_ID-${FLAVORS_PRE}"//该aar包的名称
            version = "$VERSION_NAME"//版本号
            def projectName = project.getName()
            artifact "build/outputs/aar/myLibary-pre-release.aar"
//            pom.withXml{
//                def dependenciesNode = asNode().appendNode("dependencies")
//                configurations.implementation.allDependencies.forEach(){
//                    Dependency dependency ->
//                        if (dependency.version != "unspecified" && dependency.name != "unspecified"){
//                            def dependencyNode = dependenciesNode.appendNode('dependency')
//                            dependencyNode.appendNode('groupId', dependency.group)
//                            dependencyNode.appendNode('artifactId', dependency.name)
//                            dependencyNode.appendNode('version', dependency.version)
//                        }
//                }
//            }
        }
    }
    repositories {

        // 本地仓库位于USER_HOME/.m2/repository
        mavenLocal()
        // 其他maven仓库
        maven { url uri('../repository') }
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url = "$buildDir/repo"
        }

        maven {
            allowInsecureProtocol = true

            // 凭证
            credentials {
                username 'admin' // 仓库发布用户名
                password 'admin123' // 仓库发布用户密码
            }
            // 地址
            if(versionString.endsWith("-SNAPSHOT")){
                println "快照版本发布任务，SNAPSHOT task is running"
                url "$REPOS_URL_SNAPSHOT"//'http://localhost:8082/repository/repos0-snapshot/'
            }else {
                println "非快照版本发布任务，not SNAPSHOT task is running"
                url "${REPOS_URL}"//'http://localhost:8082/repository/repos0/'
            }
            //👇这是一个本地仓库地址即D盘的maventestrepository文件夹，可以用来测试发布aar包，发布之后的aar将存放于该地址
            //url = "file://d:/maventestrepository"
        }
    }
}

